// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaiTwitterApi.Models;

namespace PaiTwitterApi.Migrations
{
    [DbContext(typeof(PaiTwitterContext))]
    [Migration("20230511145839_Data Models")]
    partial class DataModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaiTwitterApi.Models.TComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorIdUserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CreatorIdUserId");

                    b.ToTable("TComment");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TFollow", b =>
                {
                    b.Property<int>("FollowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FollowedIdUserId")
                        .HasColumnType("int");

                    b.Property<int?>("FollowerIdUserId")
                        .HasColumnType("int");

                    b.HasKey("FollowId");

                    b.HasIndex("FollowedIdUserId");

                    b.HasIndex("FollowerIdUserId");

                    b.ToTable("TFollow");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TLike", b =>
                {
                    b.Property<int>("LikeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CommentId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorIdUserId")
                        .HasColumnType("int");

                    b.Property<int?>("PostId1")
                        .HasColumnType("int");

                    b.HasKey("LikeId");

                    b.HasIndex("CommentId1");

                    b.HasIndex("CreatorIdUserId");

                    b.HasIndex("PostId1");

                    b.ToTable("TLike");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorIdUserId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SharedPostIdPostId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("CreatorIdUserId");

                    b.HasIndex("SharedPostIdPostId");

                    b.ToTable("TPost");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastActivity")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("UserId")
                        .HasName("PK__tUser__1788CC4C65F92F39");

                    b.ToTable("tUser");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TComment", b =>
                {
                    b.HasOne("PaiTwitterApi.Models.TUser", "CreatorId")
                        .WithMany()
                        .HasForeignKey("CreatorIdUserId");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TFollow", b =>
                {
                    b.HasOne("PaiTwitterApi.Models.TUser", "FollowedId")
                        .WithMany()
                        .HasForeignKey("FollowedIdUserId");

                    b.HasOne("PaiTwitterApi.Models.TUser", "FollowerId")
                        .WithMany()
                        .HasForeignKey("FollowerIdUserId");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TLike", b =>
                {
                    b.HasOne("PaiTwitterApi.Models.TComment", "CommentId")
                        .WithMany()
                        .HasForeignKey("CommentId1");

                    b.HasOne("PaiTwitterApi.Models.TUser", "CreatorId")
                        .WithMany()
                        .HasForeignKey("CreatorIdUserId");

                    b.HasOne("PaiTwitterApi.Models.TPost", "PostId")
                        .WithMany()
                        .HasForeignKey("PostId1");
                });

            modelBuilder.Entity("PaiTwitterApi.Models.TPost", b =>
                {
                    b.HasOne("PaiTwitterApi.Models.TUser", "CreatorId")
                        .WithMany()
                        .HasForeignKey("CreatorIdUserId");

                    b.HasOne("PaiTwitterApi.Models.TPost", "SharedPostId")
                        .WithMany()
                        .HasForeignKey("SharedPostIdPostId");
                });
#pragma warning restore 612, 618
        }
    }
}
